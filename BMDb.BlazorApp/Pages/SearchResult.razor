@page "/searchresult/{text}"
@using BMDb.BlazorApp.Models
@using BMDb.BlazorApp.Services
@inject IAsyncMovieService MovieService

@if (_movies == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (_movies.Count == 0)
{
    <p>
        <em class="justify-content-center">No movies found</em>
    </p>
}
else
{
    <p>
        <em>Found @_movies.Count movies</em>
    </p>
}

<form>
    <div class="container pt-5">
        <div class="row">
            @foreach (var item in _movies!)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(item.Poster))
                        {
                            <img src="@item.Poster" class="card-img-top" alt="@item.Title"/>
                        }
                        <div class="card-body">
                            <h3 class="card-title text-success">@item.Title</h3>
                            <p class="card-text">
                                <strong>Year:</strong> @item.Year<br/>
                                <strong>Genre:</strong> @item.Genre<br/>
                                <strong>Director:</strong> @item.Director
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</form>

@code {
    private List<MovieModel>? _movies = new();

    [Parameter]
    public string? Text { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _movies = await MovieService.SearchMoviesAsync(Text);
    }


}