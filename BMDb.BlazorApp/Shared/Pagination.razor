@using BMDb.BlazorApp.Models
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach (var item in _links!)
        {
            <li @onclick="() => SelectedPagelnternal(item)"
                style="cursor: pointer;"
                class="page-item @(item.Enabled ? "" : "disabled") @(item.Active ? "active" : "")">
                <span class="page-link">@item.Text</span>
            </li>
        }
    </ul>
</nav>

@code {
    private MovieModel _movieModel;

    [Parameter]
    public int CurrentPage { get; set; } = 1;

    [Parameter]
    public int TotalPagesQuantity { get; set; } = 1;

    [Parameter]
    public int Radius { get; set; }

    [Parameter]
    public EventCallback<int> SelectedPage { get; set; }

    List<LinkModel>? _links = new();
    public bool HasPreviousPage => CurrentPage > 1;
    public bool HasNextPage => CurrentPage < TotalPagesQuantity;

    protected override void OnParametersSet()
    {
        LoadPages();
    }

    private async Task SelectedPagelnternal(LinkModel link)
    {
        if (!link.Enabled)
        {
            return;
        }

        CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(CurrentPage);
    }

    private void LoadPages()
    {
        _links = new List<LinkModel>();
    // var isPreviousLinkEnabled = CurrentPage != 1;

        var previousPage = CurrentPage - 1;
        _links.Add(new LinkModel(CurrentPage - 1, HasPreviousPage, "Previous"));

    // for (int i = 1; i <= TotalPagesQuantity; i++)
    // {
    //     if (i >= CurrentPage - Radius && i <= CurrentPage + Radius)
    //     {
    //         _links.Add(new LinkModel(i) { Active = CurrentPage == i });
    //     }
    // }

        for (int i = 1; i <= 3; i++)
        {
            _links.Add(new LinkModel(i) { Active = CurrentPage == i });
        }
        _links.Add(new LinkModel(CurrentPage + 1, HasNextPage, "Next"));
    }

    class LinkModel
    {
        public string Text { get; }
        public int Page { get; }
        public bool Enabled { get; }
        public bool Active { get; init; }

        public LinkModel(int page)
            : this(page, true)
        {
        }

        private LinkModel(int page, bool enabled)
            : this(page, enabled, page.ToString())
        {
        }

        public LinkModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        }
    }

}